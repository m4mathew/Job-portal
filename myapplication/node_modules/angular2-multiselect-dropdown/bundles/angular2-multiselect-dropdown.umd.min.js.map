{"version":3,"sources":["ng://angular2-multiselect-dropdown/lib/multiselect.model.ts","ng://angular2-multiselect-dropdown/lib/clickOutside.ts","ng://angular2-multiselect-dropdown/lib/multiselect.service.ts","ng://angular2-multiselect-dropdown/lib/list-filter.ts","ng://angular2-multiselect-dropdown/lib/menu-item.ts","ng://angular2-multiselect-dropdown/lib/virtual-scroll.ts","ng://angular2-multiselect-dropdown/lib/multiselect.component.ts"],"names":["MyException","status","body","this","ClickOutsideDirective","_elementRef","EventEmitter","prototype","onClick","event","targetElement","nativeElement","contains","clickOutside","emit","Directive","args","selector","ElementRef","Output","HostListener","type","ScrollDirective","scroll","styleDirective","el","ngOnInit","style","top","styleVal","ngOnChanges","Input","setPosition","height","bottom","parseInt","DataService","Subject","setData","data","filteredData","subject","next","getData","asObservable","getFilteredData","length","Injectable","ListFilterPipe","ds","transform","items","filter","searchBy","_this","filteredList","item","applyFilter","found","grpTitle","t","toString","toLowerCase","indexOf","prop","Pipe","name","pure","Item","Component","template","ContentChild","TemplateRef","Badge","Search","TemplateRenderer","viewContainer","view","createEmbeddedView","$implicit","ngOnDestroy","destroy","ViewContainerRef","encapsulation","ViewEncapsulation","None","VirtualScrollComponent","element","renderer","zone","window","item1","item2","horizontal","scrollThrottlingTime","resetWrapGroupDimensions","pageInfo","previousViewPort","startIndex","endIndex","Object","defineProperty","_enableUnequalChildrenSizes","value","minMeasuredChildWidth","undefined","minMeasuredChildHeight","Math","max","_bufferAmount","enableUnequalChildrenSizes","_scrollThrottlingTime","refresh_throttled","throttleTrailing","_this_1","refresh_internal","_checkResizeInterval","addScrollEventHandlers","_items","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","y","x","_parentScroll","removeScrollEventHandlers","changes","indexLengthChanged","cachedItemsLength","firstRun","previousValue","ngDoCheck","refresh","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","index","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","min","itemCount","scrollToIndex_internal","scrollAnimationTime","offset","getElementsOffset","calculatePadding","wrapGroupsPerPage","_childScrollDim","setProperty","_scrollType","checkScrollElementResized","sizeChanged","boundingRect","getBoundingClientRect","previousScrollBoundingRect","widthChange","abs","width","heightChange","resizeBypassRefreshTheshold","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","func","wait","timeout","_arguments","arguments","apply","setTimeout","itemsArrayModified","refreshCompletedCallback","maxRunTimes","runOutsideAngular","requestAnimationFrame","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","scrollLength","paddingChanged","padding","setStyle","invisiblePaddingElementRef","useMarginInsteadOfTranslate","contentElementRef","run","viewPortItems","startIndexWithBuffer","endIndexWithBuffer","slice","update","vsUpdate","start","end","vsStart","vsEnd","change","vsChange","parentScroll","Window","document","scrollingElement","documentElement","disposeScrollHandler","listen","disposeResizeHandler","checkScrollElementResizedTimer","setInterval","clearInterval","containerElementRef","elementClientRect","scrollClientRect","left","countItemsPerWrapGroup","propertyName","children","childrenLength","firstOffset","result","getScrollPosition","windowScrollValue","oldWrapGroupDimensions","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","i","compareItems","childWidth","childHeight","calculatedScrollbarHeight","offsetHeight","clientHeight","calculatedScrollbarWidth","offsetWidth","clientWidth","defaultChildWidth","defaultChildHeight","viewWidth","scrollbarWidth","viewHeight","scrollbarHeight","content","scrollOffset","ceil","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","averageChildWidth","averageChildHeight","itemsPerRow","itemsPerCol","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","round","arrayStartIndexWithBuffer","allowUnequalChildrenSizes_Experimental","startingWrapGroupIndex","calculatePageInfo","scrollPosition","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","floor","arrayEndIndex","isNaN","bufferSize","bufferAmount","newPadding","newScrollLength","exportAs","host","[class.horizontal]","[class.vertical]","[class.selfScroll]","Renderer2","NgZone","ViewChild","read","DROPDOWN_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMultiSelect","multi","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","noop","cdr","singleSelection","text","enableCheckAll","selectAllText","unSelectAllText","filterSelectAllText","filterUnSelectAllText","enableSearchFilter","maxHeight","badgeShowLimit","classes","disabled","searchPlaceholderText","showCheckbox","noDataLabel","searchAutofocus","lazyLoading","labelKey","primaryKey","position","enableFilterSelectAll","selectGroup","addNewItemOnFilter","addNewButtonText","settings","assign","defaultSettings","groupBy","groupedData","transformData","groupCachedItems","cloneArray","cachedItems","selectedListHeight","val","selectedListElem","subscription","subscribe","len","forEach","obj","hasOwnProperty","filterLength","onFilterChange","firstChange","selectedItems","console","log","loading","isSelectAll","ngAfterViewInit","ngAfterViewChecked","detectChanges","onItemClick","evt","isSelected","limit","limitSelection","removeSelected","onDeSelect","addSelected","onSelect","updateGroupInfo","validate","c","writeValue","msg","e","error","registerOnChange","fn","onChangeCallback","registerOnTouched","onTouchedCallback","trackByFn","clickedItem","push","closeDropdown","splice","toggleDropdown","isActive","searchInput","searchTempl","focus","onOpen","onClose","preventDefault","toggleSelectAll","selected","onDeSelectAll","onSelectAll","toggleFilterSelectAll","isFilterSelectAll","removed_1","onFilterDeSelectAll","added_1","onFilterSelectAll","toggleInfiniteFilterSelectAll","isInfiniteFilterSelectAll","clearSearch","cnt","arr","Array","isArray","JSON","parse","stringify","list","field","groupedObj","reduce","prev","cur","tempArr","keys","map","filterInfiniteList","filteredElems","target","infiniteFilterLength","resetInfiniteSearch","onScrollEnd","onScrollToEnd","unsubscribe","addFilterNewItem","onAddFilterNewItem","filterPipe","[class]","providers","ChangeDetectorRef","NgModule","imports","CommonModule","FormsModule","declarations","CIcon","exports"],"mappings":"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","sourcesContent":["export class MyException {\r\n\tstatus : number;\r\n\tbody : any;\r\n\tconstructor(status : number, body : any) {\r\n\t\tthis.status = status;\r\n\t\tthis.body = body;\r\n\t}\r\n\t\r\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener, Input, OnInit, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n\r\n    @Output()\r\n    public clickOutside = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('document:click', ['$event', '$event.target'])\r\n    @HostListener('document:touchstart', ['$event', '$event.target'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n\r\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[scroll]'\r\n})\r\nexport class ScrollDirective {\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n\r\n    @Output()\r\n    public scroll = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('scroll', ['$event'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        this.scroll.emit(event);\r\n    }\r\n}\r\n@Directive({\r\n    selector: '[styleProp]'\r\n})\r\nexport class styleDirective {\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n    }\r\n\r\n    @Input('styleProp') styleVal: number;\r\n\r\n    ngOnInit() {\r\n\r\n        this.el.nativeElement.style.top = this.styleVal;\r\n    }\r\n    ngOnChanges(): void {\r\n        this.el.nativeElement.style.top = this.styleVal;\r\n    }\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: '[setPosition]'\r\n})\r\nexport class setPosition implements OnInit, OnChanges {\r\n\r\n    @Input('setPosition') height: number;\r\n\r\n    constructor(public el: ElementRef) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        if (this.height) {\r\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\r\n        }\r\n    }\r\n    ngOnChanges(): void {\r\n        if (this.height) {\r\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  filteredData: any = [];\r\n  private subject = new Subject<any>();\r\n\r\n  setData(data: any) {\r\n\r\n    this.filteredData = data;\r\n    this.subject.next(data);\r\n  }\r\n  getData(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n  getFilteredData() {\r\n    if (this.filteredData && this.filteredData.length > 0) {\r\n      return this.filteredData;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DataService } from './multiselect.service';\r\n\r\n\r\n@Pipe({\r\n    name: 'listFilter',\r\n    pure: true\r\n})\r\nexport class ListFilterPipe implements PipeTransform {\r\n\r\n    public filteredList: any = [];\r\n    constructor(private ds: DataService) {\r\n\r\n    }\r\n\r\n    transform(items: any[], filter: any, searchBy: any): any[] {\r\n        if (!items || !filter) {\r\n            this.ds.setData(items);\r\n            return items;\r\n        }\r\n        this.filteredList = items.filter((item: any) => this.applyFilter(item, filter, searchBy));\r\n        this.ds.setData(this.filteredList);\r\n        return this.filteredList;\r\n    }\r\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\r\n        let found = false;\r\n        if (searchBy.length > 0) {\r\n            if (item.grpTitle) {\r\n                found = true;\r\n            }\r\n            else {\r\n                for (var t = 0; t < searchBy.length; t++) {\r\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\r\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (item.grpTitle) {\r\n                found = true;\r\n            }\r\n            else {\r\n                for (var prop in item) {\r\n                    if (filter && item[prop]) {\r\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return found;\r\n    }\r\n}","import { Component, OnInit, OnDestroy, NgModule, TemplateRef, AfterContentInit, ContentChild, EmbeddedViewRef, OnChanges, ViewContainerRef, ViewEncapsulation, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform, Directive } from '@angular/core';\r\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\r\nimport { CommonModule }       from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'c-item',\r\n  template: ``\r\n})\r\n\r\nexport class Item { \r\n\r\n    @ContentChild(TemplateRef) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-badge',\r\n  template: ``\r\n})\r\n\r\nexport class Badge { \r\n\r\n    @ContentChild(TemplateRef) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-search',\r\n  template: ``\r\n})\r\n\r\nexport class Search { \r\n\r\n    @ContentChild(TemplateRef) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n@Component({\r\n  selector: 'c-templateRenderer',\r\n  template: ``\r\n})\r\n\r\nexport class TemplateRenderer implements OnInit, OnDestroy { \r\n\r\n    @Input() data: any\r\n    @Input() item: any\r\n    view: EmbeddedViewRef<any>;\r\n\r\n    constructor(public viewContainer: ViewContainerRef) {   \r\n    }\r\n    ngOnInit() {\r\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\r\n            '\\$implicit': this.data,\r\n            'item':this.item\r\n        });\r\n    }\r\n\t\r\n    ngOnDestroy() {\r\n\t\tthis.view.destroy();\r\n\t}\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\r\n                        <g>\r\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\r\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\r\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\r\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\r\n                        </g>\r\n                    </svg>\r\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g id=\"_x31_0_34_\">\r\n\t\t<g>\r\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\r\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\r\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n</svg>\r\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g id=\"_x39__30_\">\r\n\t\t<g>\r\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\r\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\r\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n\r\n</svg>\r\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\r\n\t xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\r\n\t\t\t<g>\r\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\r\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\r\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\r\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\r\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\r\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\r\n\t\t\t</g>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n\r\n</svg>\r\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\r\n<g>\r\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\r\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\r\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\r\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\r\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\r\n</g>\r\n</svg>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n\r\n})\r\n\r\nexport class CIcon { \r\n\r\n    @Input() name:any;\r\n\r\n}","import {\r\n\tComponent,\r\n\tContentChild,\r\n\tElementRef,\r\n\tEventEmitter,\r\n\tInput,\r\n\tNgModule,\r\n\tNgZone,\r\n\tOnChanges,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tOutput,\r\n\tRenderer2,\r\n\tViewChild,\r\n} from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nexport interface ChangeEvent {\r\n\tstart?: number;\r\n\tend?: number;\r\n}\r\n\r\nexport interface WrapGroupDimensions {\r\n\tnumberOfKnownWrapGroupChildSizes: number;\r\n\tsumOfKnownWrapGroupChildWidths: number;\r\n\tsumOfKnownWrapGroupChildHeights: number;\r\n\tmaxChildSizePerWrapGroup: WrapGroupDimension[];\r\n}\r\n\r\nexport interface WrapGroupDimension {\r\n\tchildWidth: number;\r\n\tchildHeight: number;\r\n\titems: any[];\r\n}\r\n\r\nexport interface IDimensions {\r\n\titemCount: number;\r\n\titemsPerWrapGroup: number;\r\n\twrapGroupsPerPage: number;\r\n\titemsPerPage: number;\r\n\tpageCount_fractional: number;\r\n\tchildWidth: number;\r\n\tchildHeight: number;\r\n\tscrollLength: number;\r\n}\r\n\r\nexport interface IPageInfo {\r\n\tstartIndex: number;\r\n\tendIndex: number;\r\n}\r\n\r\nexport interface IPageInfoWithBuffer extends IPageInfo {\r\n\tstartIndexWithBuffer: number;\r\n\tendIndexWithBuffer: number;\r\n}\r\n\r\nexport interface IViewport extends IPageInfoWithBuffer {\r\n\tpadding: number;\r\n\tscrollLength: number;\r\n}\r\n\r\n@Component({\r\n\tselector: 'virtual-scroll,[virtualScroll]',\r\n\texportAs: 'virtualScroll',\r\n\ttemplate: `\r\n    <div class=\"total-padding\" #invisiblePadding></div>\r\n    <div class=\"scrollable-content\" #content>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n\thost: {\r\n\t\t'[class.horizontal]': \"horizontal\",\r\n\t\t'[class.vertical]': \"!horizontal\",\r\n\t\t'[class.selfScroll]': \"!parentScroll\"\r\n\t},\r\n\tstyles: [`\r\n    :host {\r\n      position: relative;\r\n\t  display: block;\r\n      -webkit-overflow-scrolling: touch;\r\n    }\r\n\t\r\n\t:host.horizontal.selfScroll {\r\n      overflow-y: visible;\r\n      overflow-x: auto;\r\n\t}\r\n\t:host.vertical.selfScroll {\r\n      overflow-y: auto;\r\n      overflow-x: visible;\r\n\t}\r\n\t\r\n    .scrollable-content {\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      max-width: 100vw;\r\n      max-height: 100vh;\r\n      position: absolute;\r\n    }\r\n\r\n\t.scrollable-content ::ng-deep > * {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t:host.horizontal {\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t\r\n\t:host.horizontal .scrollable-content {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t\r\n\t:host.horizontal .scrollable-content ::ng-deep > * {\r\n\t\tflex-shrink: 0;\r\n\t\tflex-grow: 0;\r\n\t\twhite-space: initial;\r\n\t}\r\n\t\r\n    .total-padding {\r\n      width: 1px;\r\n      opacity: 0;\r\n    }\r\n    \r\n    :host.horizontal .total-padding {\r\n      height: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\r\n\tpublic viewPortItems: any[];\r\n\tpublic window = window;\r\n\r\n\tpublic get viewPortIndices(): IPageInfo {\r\n\t\tlet pageInfo: IPageInfo = this.previousViewPort || <any>{};\r\n\t\treturn {\r\n\t\t\tstartIndex: pageInfo.startIndex || 0,\r\n\t\t\tendIndex: pageInfo.endIndex || 0\r\n\t\t};\r\n\t}\r\n\r\n\tprotected _enableUnequalChildrenSizes: boolean = false;\r\n\t@Input()\r\n\tpublic get enableUnequalChildrenSizes(): boolean {\r\n\t\treturn this._enableUnequalChildrenSizes;\r\n\t}\r\n\tpublic set enableUnequalChildrenSizes(value: boolean) {\r\n\t\tif (this._enableUnequalChildrenSizes === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._enableUnequalChildrenSizes = value;\r\n\t\tthis.minMeasuredChildWidth = undefined;\r\n\t\tthis.minMeasuredChildHeight = undefined;\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic useMarginInsteadOfTranslate: boolean = false;\r\n\r\n\t@Input()\r\n\tpublic scrollbarWidth: number;\r\n\r\n\t@Input()\r\n\tpublic scrollbarHeight: number;\r\n\r\n\t@Input()\r\n\tpublic childWidth: number;\r\n\r\n\t@Input()\r\n\tpublic childHeight: number;\r\n\r\n\tprotected _bufferAmount: number = 0;\r\n\t@Input()\r\n\tpublic get bufferAmount(): number {\r\n\t\treturn Math.max(this._bufferAmount, this.enableUnequalChildrenSizes ? 5 : 0);\r\n\t}\r\n\tpublic set bufferAmount(value: number) {\r\n\t\tthis._bufferAmount = value;\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic scrollAnimationTime: number = 750;\r\n\r\n\t@Input()\r\n\tpublic resizeBypassRefreshTheshold: number = 5;\r\n\r\n\tprotected _scrollThrottlingTime: number;\r\n\t@Input()\r\n\tpublic get scrollThrottlingTime(): number {\r\n\t\treturn this._scrollThrottlingTime;\r\n\t}\r\n\tpublic set scrollThrottlingTime(value: number) {\r\n\t\tthis._scrollThrottlingTime = value;\r\n\t\tthis.refresh_throttled = <any>this.throttleTrailing(() => {\r\n\t\t\tthis.refresh_internal(false);\r\n\t\t}, this._scrollThrottlingTime);\r\n\t}\r\n\r\n\tprotected checkScrollElementResizedTimer: number;\r\n\tprotected _checkResizeInterval: number = 1000;\r\n\t@Input()\r\n\tpublic get checkResizeInterval(): number {\r\n\t\treturn this._checkResizeInterval;\r\n\t}\r\n\tpublic set checkResizeInterval(value: number) {\r\n\t\tif (this._checkResizeInterval === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._checkResizeInterval = value;\r\n\t\tthis.addScrollEventHandlers();\r\n\t}\r\n\r\n\tprotected _items: any[] = [];\r\n\t@Input()\r\n\tpublic get items(): any[] {\r\n\t\treturn this._items;\r\n\t}\r\n\tpublic set items(value: any[]) {\r\n\t\tif (value === this._items) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._items = value || [];\r\n\t\tthis.refresh_internal(true);\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\r\n\r\n\tprotected _horizontal: boolean;\r\n\t@Input()\r\n\tpublic get horizontal(): boolean {\r\n\t\treturn this._horizontal;\r\n\t}\r\n\tpublic set horizontal(value: boolean) {\r\n\t\tthis._horizontal = value;\r\n\t\tthis.updateDirection();\r\n\t}\r\n\r\n\tprotected revertParentOverscroll(): void {\r\n\t\tconst scrollElement: any = this.getScrollElement();\r\n\t\tif (scrollElement && this.oldParentScrollOverflow) {\r\n\t\t\tscrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\r\n\t\t\tscrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\r\n\t\t}\r\n\r\n\t\tthis.oldParentScrollOverflow = undefined;\r\n\t}\r\n\r\n\tprotected oldParentScrollOverflow: { x: string, y: string };\r\n\tprotected _parentScroll: Element | Window;\r\n\t@Input()\r\n\tpublic get parentScroll(): Element | Window {\r\n\t\treturn this._parentScroll;\r\n\t}\r\n\tpublic set parentScroll(value: Element | Window) {\r\n\t\tif (this._parentScroll === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.revertParentOverscroll();\r\n\t\tthis._parentScroll = value;\r\n\t\tthis.addScrollEventHandlers();\r\n\r\n\t\tconst scrollElement:any = this.getScrollElement();\r\n\t\tif (scrollElement !== this.element.nativeElement) {\r\n\t\t\tthis.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\r\n\t\t\tscrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\r\n\t\t\tscrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\r\n\t\t}\r\n\t}\r\n\r\n\t@Output()\r\n\tpublic update: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\t@Output()\r\n\tpublic vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n\t@Output()\r\n\tpublic change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\t@Output()\r\n\tpublic vsChange: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n\t@Output()\r\n\tpublic start: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\t@Output()\r\n\tpublic vsStart: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n\t@Output()\r\n\tpublic end: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\t@Output()\r\n\tpublic vsEnd: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n\t@ViewChild('content', { read: ElementRef })\r\n\tpublic contentElementRef: ElementRef;\r\n\r\n\t@ViewChild('invisiblePadding', { read: ElementRef })\r\n\tpublic invisiblePaddingElementRef: ElementRef;\r\n\r\n\t@ContentChild('container', { read: ElementRef })\r\n\tpublic containerElementRef: ElementRef;\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.addScrollEventHandlers();\r\n\t}\r\n\r\n\tpublic ngOnDestroy() {\r\n\t\tthis.removeScrollEventHandlers();\r\n\t\tthis.revertParentOverscroll();\r\n\t}\r\n\r\n\tpublic ngOnChanges(changes: any) {\r\n\t\tlet indexLengthChanged: any = this.cachedItemsLength !== this.items.length;\r\n\t\tthis.cachedItemsLength = this.items.length;\r\n\r\n\t\tconst firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\r\n\t\tthis.refresh_internal(indexLengthChanged || firstRun);\r\n\t}\r\n\r\n\tpublic ngDoCheck() {\r\n\t\tif (this.cachedItemsLength !== this.items.length) {\r\n\t\t\tthis.cachedItemsLength = this.items.length;\r\n\t\t\tthis.refresh_internal(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refresh() {\r\n\t\tthis.refresh_internal(true);\r\n\t}\r\n\r\n\tpublic scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\r\n\t\tlet index: number = this.items.indexOf(item);\r\n\t\tif (index === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\r\n\t}\r\n\r\n\tpublic scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\r\n\t\tlet maxRetries: number = 5;\r\n\r\n\t\tlet retryIfNeeded = () => {\r\n\t\t\t--maxRetries;\r\n\t\t\tif (maxRetries <= 0) {\r\n\t\t\t\tif (animationCompletedCallback) {\r\n\t\t\t\t\tanimationCompletedCallback();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet dimensions: any = this.calculateDimensions();\r\n\t\t\tlet desiredStartIndex: any = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\r\n\t\t\tif (this.previousViewPort.startIndex === desiredStartIndex) {\r\n\t\t\t\tif (animationCompletedCallback) {\r\n\t\t\t\t\tanimationCompletedCallback();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\r\n\t\t};\r\n\r\n\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\r\n\t}\r\n\r\n\tprotected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined) {\r\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\r\n\r\n\t\tlet scrollElement: any = this.getScrollElement();\r\n\t\tlet offset: any = this.getElementsOffset();\r\n\r\n\t\tlet dimensions: any = this.calculateDimensions();\r\n\t\tlet scroll: any = this.calculatePadding(index, dimensions, false) + offset + additionalOffset;\r\n\t\tif (!alignToBeginning) {\r\n\t\t\tscroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\r\n\t\t}\r\n\r\n\t\tlet animationRequest: number;\r\n\r\n\r\n\t\tif (!animationMilliseconds) {\r\n\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, scroll);\r\n\t\t\tthis.refresh_internal(false, animationCompletedCallback);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\r\n\t}\r\n\r\n\tconstructor(protected readonly element: ElementRef, protected readonly renderer: Renderer2, protected readonly zone: NgZone) {\r\n\t\tthis.horizontal = false;\r\n\t\tthis.scrollThrottlingTime = 0;\r\n\t\tthis.resetWrapGroupDimensions();\r\n\t}\r\n\r\n\tprotected previousScrollBoundingRect: ClientRect;\r\n\tprotected checkScrollElementResized(): void {\r\n\t\tlet boundingRect: any = this.getScrollElement().getBoundingClientRect();\r\n\r\n\t\tlet sizeChanged: boolean;\r\n\t\tif (!this.previousScrollBoundingRect) {\r\n\t\t\tsizeChanged = true;\r\n\t\t} else {\r\n\t\t\tlet widthChange: any = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\r\n\t\t\tlet heightChange: any = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\r\n\t\t\tsizeChanged = widthChange > this.resizeBypassRefreshTheshold || heightChange > this.resizeBypassRefreshTheshold;\r\n\t\t}\r\n\r\n\t\tif (sizeChanged) {\r\n\t\t\tthis.previousScrollBoundingRect = boundingRect;\r\n\t\t\tif (boundingRect.width > 0 && boundingRect.height > 0) {\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _invisiblePaddingProperty: any;\r\n\tprotected _offsetType: any;\r\n\tprotected _scrollType: any;\r\n\tprotected _pageOffsetType: any;\r\n\tprotected _childScrollDim: any;\r\n\tprotected _translateDir: any;\r\n\tprotected _marginDir: any;\r\n\tprotected updateDirection(): void {\r\n\t\tif (this.horizontal) {\r\n\t\t\tthis._invisiblePaddingProperty = 'width';\r\n\t\t\tthis._offsetType = 'offsetLeft';\r\n\t\t\tthis._pageOffsetType = 'pageXOffset';\r\n\t\t\tthis._childScrollDim = 'childWidth';\r\n\t\t\tthis._marginDir = 'margin-left';\r\n\t\t\tthis._translateDir = 'translateX';\r\n\t\t\tthis._scrollType = 'scrollLeft';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._invisiblePaddingProperty = 'height';\r\n\t\t\tthis._offsetType = 'offsetTop';\r\n\t\t\tthis._pageOffsetType = 'pageYOffset';\r\n\t\t\tthis._childScrollDim = 'childHeight';\r\n\t\t\tthis._marginDir = 'margin-top';\r\n\t\t\tthis._translateDir = 'translateY';\r\n\t\t\tthis._scrollType = 'scrollTop';\r\n\t\t}\r\n\t}\r\n\r\n\tprotected refresh_throttled: () => void;\r\n\r\n\tprotected throttleTrailing(func: Function, wait: number): Function {\r\n\t\tlet timeout: any = undefined;\r\n\t\tconst result = function () {\r\n\t\t\tconst _this = this;\r\n\t\t\tconst _arguments = arguments;\r\n\r\n\t\t\tif (timeout) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (wait <= 0) {\r\n\t\t\t\tfunc.apply(_this, _arguments);\r\n\t\t\t} else {\r\n\t\t\t\ttimeout = setTimeout(function () {\r\n\t\t\t\t\ttimeout = undefined;\r\n\t\t\t\t\tfunc.apply(_this, _arguments);\r\n\t\t\t\t}, wait);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected calculatedScrollbarWidth: number = 0;\r\n\tprotected calculatedScrollbarHeight: number = 0;\r\n\r\n\tprotected padding: number = 0;\r\n\tprotected previousViewPort: IViewport = <any>{};\r\n\tprotected cachedItemsLength: number;\r\n\r\n\tprotected disposeScrollHandler: () => void | undefined;\r\n\tprotected disposeResizeHandler: () => void | undefined;\r\n\r\n\tprotected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2) {\r\n\t\t//note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\r\n\t\t//The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\r\n\t\t//The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\r\n\t\t//Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent his.\r\n\r\n\t\tthis.zone.runOutsideAngular(() => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\r\n\t\t\t\tif (itemsArrayModified) {\r\n\t\t\t\t\tthis.resetWrapGroupDimensions();\r\n\t\t\t\t}\r\n\t\t\t\tlet viewport: any = this.calculateViewport();\r\n\r\n\t\t\t\tlet startChanged: any = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\r\n\t\t\t\tlet endChanged: any = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\r\n\t\t\t\tlet scrollLengthChanged: any = viewport.scrollLength !== this.previousViewPort.scrollLength;\r\n\t\t\t\tlet paddingChanged: any = viewport.padding !== this.previousViewPort.padding;\r\n\r\n\t\t\t\tthis.previousViewPort = viewport;\r\n\r\n\t\t\t\tif (scrollLengthChanged) {\r\n\t\t\t\t\tthis.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (paddingChanged) {\r\n\t\t\t\t\tif (this.useMarginInsteadOfTranslate) {\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet emitIndexChangedEvents: any = true; // maxReRunTimes === 1 (would need to still run if didn't update if previous iteration had updated)\r\n\r\n\t\t\t\tif (startChanged || endChanged) {\r\n\t\t\t\t\tthis.zone.run(() => {\r\n\r\n\t\t\t\t\t\t// update the scroll list to trigger re-render of components in viewport\r\n\t\t\t\t\t\tthis.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\r\n\t\t\t\t\t\tthis.update.emit(this.viewPortItems);\r\n\t\t\t\t\t\tthis.vsUpdate.emit(this.viewPortItems);\r\n\r\n\t\t\t\t\t\tif (emitIndexChangedEvents) {\r\n\t\t\t\t\t\t\tif (startChanged) {\r\n\t\t\t\t\t\t\t\tthis.start.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t\tthis.vsStart.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (endChanged) {\r\n\t\t\t\t\t\t\t\tthis.end.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t\tthis.vsEnd.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (startChanged || endChanged) {\r\n\t\t\t\t\t\t\t\tthis.change.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t\tthis.vsChange.emit({ start: viewport.startIndex, end: viewport.endIndex });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (maxRunTimes > 0) {\r\n\t\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (refreshCompletedCallback) {\r\n\t\t\t\t\t\t\trefreshCompletedCallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\r\n\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (refreshCompletedCallback) {\r\n\t\t\t\t\t\trefreshCompletedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected getScrollElement(): any {\r\n\t\treturn this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\r\n\t}\r\n\r\n\tprotected addScrollEventHandlers() {\r\n\t\tlet scrollElement: any = this.getScrollElement();\r\n\r\n\t\tthis.removeScrollEventHandlers();\r\n\r\n\t\tthis.zone.runOutsideAngular(() => {\r\n\t\t\tif (this.parentScroll instanceof Window) {\r\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.refresh_throttled);\r\n\t\t\t\tthis.disposeResizeHandler = this.renderer.listen('window', 'resize', this.refresh_throttled);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.refresh_throttled);\r\n\t\t\t\tif (this._checkResizeInterval > 0) {\r\n\t\t\t\t\tthis.checkScrollElementResizedTimer = <any>setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected removeScrollEventHandlers() {\r\n\t\tif (this.checkScrollElementResizedTimer) {\r\n\t\t\tclearInterval(this.checkScrollElementResizedTimer);\r\n\t\t}\r\n\r\n\t\tif (this.disposeScrollHandler) {\r\n\t\t\tthis.disposeScrollHandler();\r\n\t\t\tthis.disposeScrollHandler = undefined;\r\n\t\t}\r\n\r\n\t\tif (this.disposeResizeHandler) {\r\n\t\t\tthis.disposeResizeHandler();\r\n\t\t\tthis.disposeResizeHandler = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getElementsOffset(): number {\r\n\t\tlet offset: any = 0;\r\n\r\n\t\tif (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n\t\t\toffset += this.containerElementRef.nativeElement[this._offsetType];\r\n\t\t}\r\n\r\n\t\tif (this.parentScroll) {\r\n\t\t\tlet scrollElement: any = this.getScrollElement();\r\n\t\t\tlet elementClientRect: any = this.element.nativeElement.getBoundingClientRect();\r\n\t\t\tlet scrollClientRect: any = scrollElement.getBoundingClientRect();\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\toffset += elementClientRect.left - scrollClientRect.left;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toffset += elementClientRect.top - scrollClientRect.top;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(this.parentScroll instanceof Window)) {\r\n\t\t\t\toffset += scrollElement[this._scrollType];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn offset;\r\n\t}\r\n\r\n\tprotected countItemsPerWrapGroup() {\r\n\t\tlet propertyName: any = this.horizontal ? 'offsetLeft' : 'offsetTop';\r\n\t\tlet children: any = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\r\n\r\n\t\tlet childrenLength: any = children ? children.length : 0;\r\n\t\tif (childrenLength === 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tlet firstOffset: any = children[0][propertyName];\r\n\t\tlet result: any = 1;\r\n\t\twhile (result < childrenLength && firstOffset === children[result][propertyName]) {\r\n\t\t\t++result;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getScrollPosition(): number {\r\n\t\tlet windowScrollValue: number = undefined;\r\n\t\tif (this.parentScroll instanceof Window) {\r\n\t\t\tvar window: any;\r\n\t\t\twindowScrollValue = window[this._pageOffsetType];\r\n\t\t}\r\n\r\n\t\treturn windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\r\n\t}\r\n\r\n\tprotected minMeasuredChildWidth: number;\r\n\tprotected minMeasuredChildHeight: number;\r\n\r\n\tprotected wrapGroupDimensions: any;\r\n\r\n\tprotected resetWrapGroupDimensions(): void {\r\n\t\tconst oldWrapGroupDimensions = this.wrapGroupDimensions;\r\n\t\tthis.wrapGroupDimensions = {\r\n\t\t\tmaxChildSizePerWrapGroup: [],\r\n\t\t\tnumberOfKnownWrapGroupChildSizes: 0,\r\n\t\t\tsumOfKnownWrapGroupChildWidths: 0,\r\n\t\t\tsumOfKnownWrapGroupChildHeights: 0\r\n\t\t};\r\n\r\n\t\tif (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\r\n\t\tfor (let wrapGroupIndex: any = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\r\n\t\t\tconst oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\r\n\t\t\tif (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemsChanged: any = false;\r\n\t\t\tlet arrayStartIndex: any = itemsPerWrapGroup * wrapGroupIndex;\r\n\t\t\tfor (let i = 0; i < itemsPerWrapGroup; ++i) {\r\n\t\t\t\tif (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\r\n\t\t\t\t\titemsChanged = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!itemsChanged) {\r\n\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\r\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calculateDimensions(): IDimensions {\r\n\t\tlet scrollElement: any = this.getScrollElement();\r\n\t\tlet itemCount: any = this.items.length;\r\n\r\n\t\tconst maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\r\n\t\tthis.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\r\n\t\tthis.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\r\n\r\n\t\tlet viewWidth: any = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\r\n\t\tlet viewHeight: any = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\r\n\r\n\t\tlet content: any = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\r\n\r\n\t\tlet itemsPerWrapGroup: any = this.countItemsPerWrapGroup();\r\n\t\tlet wrapGroupsPerPage: any;\r\n\r\n\t\tlet defaultChildWidth: any;\r\n\t\tlet defaultChildHeight: any;\r\n\r\n\t\tif (!this.enableUnequalChildrenSizes) {\r\n\t\t\tif (content.children.length > 0) {\r\n\t\t\t\tif (!this.childWidth || !this.childHeight) {\r\n\t\t\t\t\tif (!this.minMeasuredChildWidth && viewWidth > 0) {\r\n\t\t\t\t\t\tthis.minMeasuredChildWidth = viewWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.minMeasuredChildHeight && viewHeight > 0) {\r\n\t\t\t\t\t\tthis.minMeasuredChildHeight = viewHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet child: any = content.children[0];\r\n\t\t\t\tlet clientRect: any = child.getBoundingClientRect();\r\n\t\t\t\tthis.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\r\n\t\t\t\tthis.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\r\n\t\t\t}\r\n\r\n\t\t\tdefaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewWidth;\r\n\t\t\tdefaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewHeight;\r\n\t\t\tlet itemsPerRow: any = Math.max(Math.ceil(viewWidth / defaultChildWidth), 1);\r\n\t\t\tlet itemsPerCol: any = Math.max(Math.ceil(viewHeight / defaultChildHeight), 1);\r\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\r\n\t\t} else {\r\n\t\t\tlet scrollOffset: any = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\r\n\t\t\t\r\n\t\t\tlet arrayStartIndex: any = this.previousViewPort.startIndexWithBuffer || 0;\r\n\t\t\tlet wrapGroupIndex: any = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\r\n\r\n\t\t\tlet maxWidthForWrapGroup: any = 0;\r\n\t\t\tlet maxHeightForWrapGroup: any = 0;\r\n\t\t\tlet sumOfVisibleMaxWidths: any = 0;\r\n\t\t\tlet sumOfVisibleMaxHeights: any = 0;\r\n\t\t\twrapGroupsPerPage = 0;\r\n\r\n\t\t\tfor (let i = 0; i < content.children.length; ++i) {\r\n\t\t\t\t++arrayStartIndex;\r\n\t\t\t\tlet child: any = content.children[i];\r\n\t\t\t\tlet clientRect: any = child.getBoundingClientRect();\r\n\r\n\t\t\t\tmaxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\r\n\t\t\t\tmaxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\r\n\r\n\t\t\t\tif (arrayStartIndex % itemsPerWrapGroup === 0) {\r\n\t\t\t\t\tlet oldValue: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\r\n\t\t\t\t\tif (oldValue) {\r\n\t\t\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\r\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\t\tconst items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\r\n\t\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\r\n\t\t\t\t\t\tchildWidth: maxWidthForWrapGroup,\r\n\t\t\t\t\t\tchildHeight: maxHeightForWrapGroup,\r\n\t\t\t\t\t\titems: items\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\r\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\r\n\r\n\t\t\t\t\tif (this.horizontal) {\r\n\t\t\t\t\t\tlet maxVisibleWidthForWrapGroup: any = Math.min(maxWidthForWrapGroup, Math.max(viewWidth - sumOfVisibleMaxWidths, 0));\r\n\t\t\t\t\t\tif (scrollOffset > 0) {\r\n\t\t\t\t\t\t\tlet scrollOffsetToRemove: any = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\r\n\t\t\t\t\t\t\tmaxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\r\n\t\t\t\t\t\tif (maxVisibleWidthForWrapGroup > 0 && viewWidth >= sumOfVisibleMaxWidths) {\r\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet maxVisibleHeightForWrapGroup: any = Math.min(maxHeightForWrapGroup, Math.max(viewHeight - sumOfVisibleMaxHeights, 0));\r\n\t\t\t\t\t\tif (scrollOffset > 0) {\r\n\t\t\t\t\t\t\tlet scrollOffsetToRemove: any = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\r\n\t\t\t\t\t\t\tmaxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\r\n\t\t\t\t\t\tif (maxVisibleHeightForWrapGroup > 0 && viewHeight >= sumOfVisibleMaxHeights) {\r\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++wrapGroupIndex;\r\n\r\n\t\t\t\t\tmaxWidthForWrapGroup = 0;\r\n\t\t\t\t\tmaxHeightForWrapGroup = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet averageChildWidth: any = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\tlet averageChildHeight: any = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\tdefaultChildWidth = this.childWidth || averageChildWidth || viewWidth;\r\n\t\t\tdefaultChildHeight = this.childHeight || averageChildHeight || viewHeight;\r\n\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\tif (viewWidth > sumOfVisibleMaxWidths) {\r\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (viewHeight > sumOfVisibleMaxHeights) {\r\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet itemsPerPage: any = itemsPerWrapGroup * wrapGroupsPerPage;\r\n\t\tlet pageCount_fractional: any = itemCount / itemsPerPage;\r\n\t\tlet numberOfWrapGroups: any = Math.ceil(itemCount / itemsPerWrapGroup);\r\n\r\n\t\tlet scrollLength: any = 0;\r\n\r\n\t\tlet defaultScrollLengthPerWrapGroup: any = this.horizontal ? defaultChildWidth : defaultChildHeight;\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tlet numUnknownChildSizes:any = 0;\r\n\t\t\tfor (let i:any = 0; i < numberOfWrapGroups; ++i) {\r\n\t\t\t\tlet childSize: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\t\tif (childSize) {\r\n\t\t\t\t\tscrollLength += childSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++numUnknownChildSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tscrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\r\n\t\t} else {\r\n\t\t\tscrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\titemCount: itemCount,\r\n\t\t\titemsPerWrapGroup: itemsPerWrapGroup,\r\n\t\t\twrapGroupsPerPage: wrapGroupsPerPage,\r\n\t\t\titemsPerPage: itemsPerPage,\r\n\t\t\tpageCount_fractional: pageCount_fractional,\r\n\t\t\tchildWidth: defaultChildWidth,\r\n\t\t\tchildHeight: defaultChildHeight,\r\n\t\t\tscrollLength: scrollLength\r\n\t\t};\r\n\t}\r\n\r\n\tprotected cachedPageSize: number = 0;\r\n\tprotected previousScrollNumberElements: number = 0;\r\n\r\n\tprotected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: any, allowUnequalChildrenSizes_Experimental: boolean): number {\r\n\t\tif (dimensions.itemCount === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet defaultScrollLengthPerWrapGroup: number = dimensions[this._childScrollDim];\r\n\t\tlet startingWrapGroupIndex: number = Math.ceil(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\r\n\r\n\t\tif (!this.enableUnequalChildrenSizes) {\r\n\t\t\treturn defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\r\n\t\t}\r\n\r\n\t\tlet numUnknownChildSizes: any = 0;\r\n\t\tlet result: any = 0;\r\n\t\tfor (let i = 0; i < startingWrapGroupIndex; ++i) {\r\n\t\t\tlet childSize: WrapGroupDimension = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\tif (childSize) {\r\n\t\t\t\tresult += childSize;\r\n\t\t\t} else {\r\n\t\t\t\t++numUnknownChildSizes;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected calculatePageInfo(scrollPosition: number, dimensions: any): IPageInfoWithBuffer {\r\n\t\tlet scrollPercentage: any = 0;\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tconst numberOfWrapGroups:any = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\r\n\t\t\tlet totalScrolledLength: any = 0;\r\n\t\t\tlet defaultScrollLengthPerWrapGroup: any = dimensions[this._childScrollDim];\r\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\r\n\t\t\t\tlet childSize: any = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\t\tif (childSize) {\r\n\t\t\t\t\ttotalScrolledLength += childSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttotalScrolledLength += defaultScrollLengthPerWrapGroup;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (scrollPosition < totalScrolledLength) {\r\n\t\t\t\t\tscrollPercentage = i / numberOfWrapGroups;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tscrollPercentage = scrollPosition / dimensions.scrollLength;\r\n\t\t}\r\n\r\n\t\tlet startingArrayIndex_fractional: any = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\r\n\r\n\t\tlet maxStart: any = dimensions.itemCount - dimensions.itemsPerPage - 1;\r\n\t\tlet arrayStartIndex: any = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\r\n\t\tarrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\r\n\r\n\t\tlet arrayEndIndex: any = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\r\n\t\tarrayEndIndex += (dimensions.itemsPerWrapGroup - ((arrayEndIndex + 1) % dimensions.itemsPerWrapGroup)); // round up to end of wrapGroup\r\n\r\n\t\tif (isNaN(arrayStartIndex)) {\r\n\t\t\tarrayStartIndex = 0;\r\n\t\t}\r\n\t\tif (isNaN(arrayEndIndex)) {\r\n\t\t\tarrayEndIndex = 0;\r\n\t\t}\r\n\r\n\t\tarrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\r\n\t\tarrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\r\n\r\n\t\tlet bufferSize: any = this.bufferAmount * dimensions.itemsPerWrapGroup;\r\n\t\tlet startIndexWithBuffer: any = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\r\n\t\tlet endIndexWithBuffer: any = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\r\n\r\n\t\treturn {\r\n\t\t\tstartIndex: arrayStartIndex,\r\n\t\t\tendIndex: arrayEndIndex,\r\n\t\t\tstartIndexWithBuffer: startIndexWithBuffer,\r\n\t\t\tendIndexWithBuffer: endIndexWithBuffer\r\n\t\t};\r\n\t}\r\n\r\n\tprotected calculateViewport(): IViewport {\r\n\t\tlet dimensions: IDimensions = this.calculateDimensions();\r\n\t\tlet offset: any = this.getElementsOffset();\r\n\r\n\t\tlet scrollPosition: any = this.getScrollPosition();\r\n\t\tif (scrollPosition > dimensions.scrollLength && !(this.parentScroll instanceof Window)) {\r\n\t\t\tscrollPosition = dimensions.scrollLength;\r\n\t\t} else {\r\n\t\t\tscrollPosition -= offset;\r\n\t\t}\r\n\t\tscrollPosition = Math.max(0, scrollPosition);\r\n\r\n\t\tlet pageInfo: any = this.calculatePageInfo(scrollPosition, dimensions);\r\n\t\tlet newPadding: any = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions, true);\r\n\t\tlet newScrollLength: any = dimensions.scrollLength;\r\n\r\n\t\treturn {\r\n\t\t\tstartIndex: pageInfo.startIndex,\r\n\t\t\tendIndex: pageInfo.endIndex,\r\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer,\r\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer,\r\n\t\t\tpadding: Math.round(newPadding),\r\n\t\t\tscrollLength: Math.round(newScrollLength)\r\n\t\t};\r\n\t}\r\n}\r\n","import { Component, OnInit, OnDestroy, NgModule, SimpleChanges, OnChanges, ChangeDetectorRef, AfterViewChecked, ViewEncapsulation, ContentChild, ViewChild, forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyException } from './multiselect.model';\r\nimport { DropdownSettings } from './multiselect.interface';\r\nimport { ClickOutsideDirective, ScrollDirective, styleDirective, setPosition } from './clickOutside';\r\nimport { ListFilterPipe } from './list-filter';\r\nimport { Item, Badge, Search, TemplateRenderer, CIcon } from './menu-item';\r\nimport { DataService } from './multiselect.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { VirtualScrollComponent, ChangeEvent } from './virtual-scroll';\r\n\r\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => AngularMultiSelect),\r\n    multi: true\r\n};\r\nexport const DROPDOWN_CONTROL_VALIDATION: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => AngularMultiSelect),\r\n    multi: true,\r\n}\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n    selector: 'angular2-multiselect',\r\n    templateUrl: './multiselect.component.html',\r\n    host: { '[class]': 'defaultSettings.classes' },\r\n    styleUrls: ['./multiselect.component.scss'],\r\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator, AfterViewChecked, OnDestroy {\r\n\r\n    @Input()\r\n    data: Array<any>;\r\n\r\n    @Input()\r\n    settings: DropdownSettings;\r\n\r\n    @Input()\r\n    loading: boolean;\r\n\r\n    @Output('onSelect')\r\n    onSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onDeSelect')\r\n    onDeSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onSelectAll')\r\n    onSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onDeSelectAll')\r\n    onDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onOpen')\r\n    onOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onClose')\r\n    onClose: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onScrollToEnd')\r\n    onScrollToEnd: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onFilterSelectAll')\r\n    onFilterSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onFilterDeSelectAll')\r\n    onFilterDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onAddFilterNewItem')\r\n    onAddFilterNewItem: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ContentChild(Item) itemTempl: Item;\r\n    @ContentChild(Badge) badgeTempl: Badge;\r\n    @ContentChild(Search) searchTempl: Search;\r\n\r\n\r\n    @ViewChild('searchInput') searchInput: ElementRef;\r\n    @ViewChild('selectedList') selectedListElem: ElementRef;\r\n\r\n    filterPipe: ListFilterPipe;\r\n    public selectedItems: Array<any>;\r\n    public isActive: boolean = false;\r\n    public isSelectAll: boolean = false;\r\n    public isFilterSelectAll: boolean = false;\r\n    public isInfiniteFilterSelectAll: boolean = false;\r\n    public groupedData: Array<any>;\r\n    filter: any;\r\n    public chunkArray: any[];\r\n    public scrollTop: any;\r\n    public chunkIndex: any[] = [];\r\n    public cachedItems: any[] = [];\r\n    public groupCachedItems: any[] = [];\r\n    public totalRows: any;\r\n    public itemHeight: any = 41.6;\r\n    public screenItemsLen: any;\r\n    public cachedItemsLen: any;\r\n    public totalHeight: any;\r\n    public scroller: any;\r\n    public maxBuffer: any;\r\n    public lastScrolled: any;\r\n    public lastRepaintY: any;\r\n    public selectedListHeight: any;\r\n    public filterLength: any = 0;\r\n    public infiniteFilterLength: any = 0;\r\n    public viewPortItems: any;\r\n    public item: any;\r\n    subscription: Subscription;\r\n    defaultSettings: DropdownSettings = {\r\n        singleSelection: false,\r\n        text: 'Select',\r\n        enableCheckAll: true,\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        filterSelectAllText: 'Select all filtered results',\r\n        filterUnSelectAllText: 'UnSelect all filtered results',\r\n        enableSearchFilter: false,\r\n        searchBy: [],\r\n        maxHeight: 300,\r\n        badgeShowLimit: 999999999999,\r\n        classes: '',\r\n        disabled: false,\r\n        searchPlaceholderText: 'Search',\r\n        showCheckbox: true,\r\n        noDataLabel: 'No Data Available',\r\n        searchAutofocus: true,\r\n        lazyLoading: false,\r\n        labelKey: 'itemName',\r\n        primaryKey: 'id',\r\n        position: 'bottom',\r\n        enableFilterSelectAll: true,\r\n        selectGroup: false,\r\n        addNewItemOnFilter: false,\r\n        addNewButtonText: \"Add\"\r\n    }\r\n    public parseError: boolean;\r\n    public filteredList: any = [];\r\n    constructor(public _elementRef: ElementRef, private cdr: ChangeDetectorRef, private ds: DataService) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.settings = Object.assign(this.defaultSettings, this.settings);\r\n        if (this.settings.groupBy) {\r\n            this.groupedData = this.transformData(this.data, this.settings.groupBy);\r\n            this.groupCachedItems = this.cloneArray(this.groupedData);\r\n        }\r\n        this.cachedItems = this.cloneArray(this.data);\r\n        if (this.settings.position == 'top') {\r\n            setTimeout(() => {\r\n                this.selectedListHeight = { val: 0 };\r\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\r\n            });\r\n        }\r\n        this.subscription = this.ds.getData().subscribe(data => {\r\n            if (data) {\r\n                var len = 0;\r\n                data.forEach((obj: any, i: any) => {\r\n                    if (!obj.hasOwnProperty('grpTitle')) {\r\n                        len++;\r\n                    }\r\n                });\r\n                this.filterLength = len;\r\n                this.onFilterChange(data);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.firstChange) {\r\n            if (this.settings.groupBy) {\r\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\r\n                if (this.data.length == 0) {\r\n                    this.selectedItems = [];\r\n                }\r\n            }\r\n            this.cachedItems = this.cloneArray(this.data);\r\n        }\r\n        if (changes.settings && !changes.settings.firstChange) {\r\n            this.settings = Object.assign(this.defaultSettings, this.settings);\r\n        }\r\n        if (changes.loading) {\r\n            console.log(this.loading);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.selectedItems) {\r\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\r\n                this.isSelectAll = false;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.settings.lazyLoading) {\r\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\r\n        }\r\n    }\r\n    ngAfterViewChecked() {\r\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\r\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    onItemClick(item: any, index: number, evt: Event) {\r\n        if (this.settings.disabled) {\r\n            return false;\r\n        }\r\n\r\n        let found = this.isSelected(item);\r\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\r\n\r\n        if (!found) {\r\n            if (this.settings.limitSelection) {\r\n                if (limit) {\r\n                    this.addSelected(item);\r\n                    this.onSelect.emit(item);\r\n                }\r\n            }\r\n            else {\r\n                this.addSelected(item);\r\n                this.onSelect.emit(item);\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.removeSelected(item);\r\n            this.onDeSelect.emit(item);\r\n        }\r\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\r\n            this.isSelectAll = false;\r\n        }\r\n        if (this.data.length == this.selectedItems.length) {\r\n            this.isSelectAll = true;\r\n        }\r\n        if (this.settings.groupBy) {\r\n            this.updateGroupInfo(item);\r\n        }\r\n    }\r\n    public validate(c: FormControl): any {\r\n        return null;\r\n    }\r\n    private onTouchedCallback: (_: any) => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    writeValue(value: any) {\r\n        if (value !== undefined && value !== null  && value !== '') {\r\n            if (this.settings.singleSelection) {\r\n                try {\r\n\r\n                    if (value.length > 1) {\r\n                        this.selectedItems = [value[0]];\r\n                        throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\r\n                    }\r\n                    else {\r\n                        this.selectedItems = value;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.error(e.body.msg);\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (this.settings.limitSelection) {\r\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\r\n                }\r\n                else {\r\n                    this.selectedItems = value;\r\n                }\r\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\r\n                    this.isSelectAll = true;\r\n                }\r\n            }\r\n        } else {\r\n            this.selectedItems = [];\r\n        }\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n    trackByFn(index: number, item: any) {\r\n        return item[this.settings.primaryKey];\r\n    }\r\n    isSelected(clickedItem: any) {\r\n        let found = false;\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\r\n                found = true;\r\n            }\r\n        });\r\n        return found;\r\n    }\r\n    addSelected(item: any) {\r\n        if (this.settings.singleSelection) {\r\n            this.selectedItems = [];\r\n            this.selectedItems.push(item);\r\n            this.closeDropdown();\r\n        }\r\n        else\r\n            this.selectedItems.push(item);\r\n        this.onChangeCallback(this.selectedItems);\r\n        this.onTouchedCallback(this.selectedItems);\r\n    }\r\n    removeSelected(clickedItem: any) {\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\r\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\r\n            }\r\n        });\r\n        this.onChangeCallback(this.selectedItems);\r\n        this.onTouchedCallback(this.selectedItems);\r\n    }\r\n    toggleDropdown(evt: any) {\r\n        if (this.settings.disabled) {\r\n            return false;\r\n        }\r\n        this.isActive = !this.isActive;\r\n        if (this.isActive) {\r\n            if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\r\n                setTimeout(() => {\r\n                    this.searchInput.nativeElement.focus();\r\n                }, 0);\r\n            }\r\n            this.onOpen.emit(true);\r\n        }\r\n        else {\r\n            this.onClose.emit(false);\r\n        }\r\n        evt.preventDefault();\r\n    }\r\n    closeDropdown() {\r\n        if (this.searchInput && this.settings.lazyLoading) {\r\n            this.searchInput.nativeElement.value = \"\";\r\n            //this.data = [];\r\n            //this.data = this.cachedItems;\r\n        }\r\n        if (this.searchInput) {\r\n            this.searchInput.nativeElement.value = \"\";\r\n        }\r\n        this.filter = \"\";\r\n        this.isActive = false;\r\n        this.onClose.emit(false);\r\n    }\r\n    toggleSelectAll() {\r\n        if (!this.isSelectAll) {\r\n            this.selectedItems = [];\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((obj) => {\r\n                    obj.selected = true;\r\n                })\r\n            }\r\n            this.selectedItems = this.data.slice();\r\n            this.isSelectAll = true;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onTouchedCallback(this.selectedItems);\r\n\r\n            this.onSelectAll.emit(this.selectedItems);\r\n        }\r\n        else {\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((obj) => {\r\n                    obj.selected = false;\r\n                })\r\n            }\r\n            this.selectedItems = [];\r\n            this.isSelectAll = false;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onTouchedCallback(this.selectedItems);\r\n\r\n            this.onDeSelectAll.emit(this.selectedItems);\r\n        }\r\n    }\r\n    toggleFilterSelectAll() {\r\n        if (!this.isFilterSelectAll) {\r\n            let added = [];\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((item: any) => {\r\n                    item.value.forEach((el: any) => {\r\n                        if (!this.isSelected(el)) {\r\n                            this.addSelected(el);\r\n                            added.push(el);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.ds.getFilteredData().forEach((item: any) => {\r\n                    if (!this.isSelected(item)) {\r\n                        this.addSelected(item);\r\n                        added.push(item);\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            this.isFilterSelectAll = true;\r\n            this.onFilterSelectAll.emit(added);\r\n        }\r\n        else {\r\n            let removed = [];\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((item: any) => {\r\n                    item.value.forEach((el: any) => {\r\n                        if (this.isSelected(el)) {\r\n                            this.removeSelected(el);\r\n                            removed.push(el);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.ds.getFilteredData().forEach((item: any) => {\r\n                    if (this.isSelected(item)) {\r\n                        this.removeSelected(item);\r\n                        removed.push(item);\r\n                    }\r\n\r\n                });\r\n            }\r\n            this.isFilterSelectAll = false;\r\n            this.onFilterDeSelectAll.emit(removed);\r\n        }\r\n    }\r\n    toggleInfiniteFilterSelectAll() {\r\n        if (!this.isInfiniteFilterSelectAll) {\r\n            this.data.forEach((item: any) => {\r\n                if (!this.isSelected(item)) {\r\n                    this.addSelected(item);\r\n                }\r\n\r\n            });\r\n            this.isInfiniteFilterSelectAll = true;\r\n        }\r\n        else {\r\n            this.data.forEach((item: any) => {\r\n                if (this.isSelected(item)) {\r\n                    this.removeSelected(item);\r\n                }\r\n\r\n            });\r\n            this.isInfiniteFilterSelectAll = false;\r\n        }\r\n    }\r\n    clearSearch() {\r\n        if (this.settings.groupBy) {\r\n            this.filter = \"\";\r\n            this.groupedData = [];\r\n            this.groupedData = this.cloneArray(this.groupCachedItems);\r\n        }\r\n        else {\r\n            this.filter = \"\";\r\n            this.isFilterSelectAll = false;\r\n        }\r\n\r\n    }\r\n    onFilterChange(data: any) {\r\n        if (this.filter && this.filter == \"\" || data.length == 0) {\r\n            this.isFilterSelectAll = false;\r\n        }\r\n        let cnt = 0;\r\n        data.forEach((item: any) => {\r\n\r\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\r\n                cnt++;\r\n            }\r\n        });\r\n\r\n        if (cnt > 0 && this.filterLength == cnt) {\r\n            this.isFilterSelectAll = true;\r\n        }\r\n        else if (cnt > 0 && this.filterLength != cnt) {\r\n            this.isFilterSelectAll = false;\r\n        }\r\n        this.cdr.detectChanges();\r\n    }\r\n    cloneArray(arr: any) {\r\n        var i, copy;\r\n\r\n        if (Array.isArray(arr)) {\r\n            return JSON.parse(JSON.stringify(arr));\r\n        } else if (typeof arr === 'object') {\r\n            throw 'Cannot clone array containing an object!';\r\n        } else {\r\n            return arr;\r\n        }\r\n    }\r\n    updateGroupInfo(item: any) {\r\n\r\n        this.groupedData.forEach((obj: any) => {\r\n            var cnt = 0;\r\n            if (obj.grpTitle && item[this.settings.groupBy] == obj[this.settings.groupBy]) {\r\n                if (obj.list) {\r\n                    obj.list.forEach((el: any) => {\r\n                        if (this.isSelected(el)) {\r\n                            cnt++;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (obj.list && cnt === obj.list.length) {\r\n                obj.selected = true;\r\n            }\r\n            else {\r\n                obj.selected = false;\r\n            }\r\n        });\r\n    }\r\n    transformData(arr: Array<any>, field: any): Array<any> {\r\n        const groupedObj: any = arr.reduce((prev: any, cur: any) => {\r\n            if (!prev[cur[field]]) {\r\n                prev[cur[field]] = [cur];\r\n            } else {\r\n                prev[cur[field]].push(cur);\r\n            }\r\n            return prev;\r\n        }, {});\r\n        const tempArr: any = [];\r\n        Object.keys(groupedObj).map((x: any) => {\r\n            var obj: any = {};\r\n            obj[\"grpTitle\"] = true;\r\n            obj[this.settings.labelKey] = x;\r\n            obj[this.settings.groupBy] = x;\r\n            obj['selected'] = false;\r\n            obj['list'] = [];\r\n            groupedObj[x].forEach((item: any) => {\r\n                obj.list.push(item);\r\n            });\r\n            tempArr.push(obj);\r\n            obj.list.forEach((item: any) => {\r\n                tempArr.push(item);\r\n            });\r\n        });\r\n        return tempArr;\r\n    }\r\n    public filterInfiniteList(evt: any) {\r\n        var filteredElems: Array<any> = [];\r\n        if (this.settings.groupBy) {\r\n            this.groupedData = this.groupCachedItems.slice();\r\n        }\r\n        else {\r\n            this.data = this.cachedItems.slice();\r\n        }\r\n\r\n        if ((evt.target.value != null || evt.target.value != '' )  && !this.settings.groupBy) {\r\n            if (this.settings.searchBy.length > 0) {\r\n                for (var t = 0; t < this.settings.searchBy.length; t++) {\r\n\r\n                    this.data.filter((el: any) => {\r\n                            if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\r\n                                filteredElems.push(el);\r\n                            }\r\n                    });\r\n                    /*                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\r\n                                            if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\r\n                                                found = true;\r\n                                            }\r\n                                        }*/\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.data.filter(function (el: any) {\r\n                    for (var prop in el) {\r\n                        if (el[prop].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\r\n                            filteredElems.push(el);\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            this.data = [];\r\n            this.data = filteredElems;\r\n            this.infiniteFilterLength = this.data.length;\r\n        }\r\n        if (evt.target.value.toString() != '' && this.settings.groupBy) {\r\n            this.groupedData.filter(function (el: any) {\r\n                if (el.hasOwnProperty('grpTitle')) {\r\n                    filteredElems.push(el);\r\n                }\r\n                else {\r\n                    for (var prop in el) {\r\n                        if (el[prop].toString().toLowerCase().indexOf(evt.target.value.toString().toLowerCase()) >= 0) {\r\n                            filteredElems.push(el);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.groupedData = [];\r\n            this.groupedData = filteredElems;\r\n            this.infiniteFilterLength = this.groupedData.length;\r\n        }\r\n        else if (evt.target.value.toString() == '' && this.cachedItems.length > 0) {\r\n            this.data = [];\r\n            this.data = this.cachedItems;\r\n            this.infiniteFilterLength = 0;\r\n        }\r\n    }\r\n    resetInfiniteSearch() {\r\n        this.filter = \"\";\r\n        this.isInfiniteFilterSelectAll = false;\r\n        this.data = [];\r\n        this.data = this.cachedItems;\r\n        this.groupedData = this.groupCachedItems;\r\n        this.infiniteFilterLength = 0;\r\n    }\r\n    onScrollEnd(e: ChangeEvent) {\r\n        this.onScrollToEnd.emit(e);\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n    selectGroup(item: any) {\r\n        if (item.selected) {\r\n            item.selected = false;\r\n            item.list.forEach((obj: any) => {\r\n                this.removeSelected(obj);\r\n            });\r\n        }\r\n        else {\r\n            item.selected = true;\r\n            item.list.forEach((obj: any) => {\r\n                if (!this.isSelected(obj)) {\r\n                    this.addSelected(obj);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n    addFilterNewItem(){\r\n        this.onAddFilterNewItem.emit(this.filter);\r\n        this.filterPipe = new ListFilterPipe(this.ds);\r\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule],\r\n    declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, VirtualScrollComponent, CIcon],\r\n    exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, VirtualScrollComponent, CIcon],\r\n    providers: [DataService]\r\n})\r\nexport class AngularMultiSelectModule { }\r\n"]}