{"remainingRequest":"/home/mmathew/myapplication/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/mmathew/myapplication/node_modules/ts-loader/index.js??ref--10-3!/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js!/home/mmathew/myapplication/node_modules/tslint-loader/index.js!/home/mmathew/myapplication/src/main/webapp/app/entities/job/job-update.component.ts","dependencies":[{"path":"/home/mmathew/myapplication/src/main/webapp/app/entities/job/job-update.component.ts","mtime":1547194449025},{"path":"/home/mmathew/myapplication/node_modules/angular2-template-loader/index.js","mtime":1534132863114},{"path":"/home/mmathew/myapplication/node_modules/cache-loader/dist/cjs.js","mtime":1534084430679},{"path":"/home/mmathew/myapplication/node_modules/thread-loader/dist/cjs.js","mtime":1534084440479},{"path":"/home/mmathew/myapplication/node_modules/ts-loader/index.js","mtime":1534132874116},{"path":"/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js","mtime":1534132863071},{"path":"/home/mmathew/myapplication/node_modules/tslint-loader/index.js","mtime":1534084441447}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar job_service_1 = require(\"./job.service\");\nvar JobUpdateComponent = /** @class */ (function () {\n    function JobUpdateComponent(jobService, activatedRoute) {\n        this.jobService = jobService;\n        this.activatedRoute = activatedRoute;\n    }\n    JobUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.page1 = true;\n        this.page2 = false;\n        this.page3 = false;\n        this.workTypeArray = ['Full Time', 'Part Time'];\n        this.skillsArray = ['Java', 'Spring', 'Hibernate', 'MySql', 'JSP'];\n        this.savedSkillsArry = [];\n        this.skillStr = '';\n        this.activatedRoute.data.subscribe(function (_a) {\n            var job = _a.job;\n            _this.job = job;\n        });\n    };\n    JobUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    JobUpdateComponent.prototype.save = function () {\n        this.skillStr = this.savedSkillsArry.join(', ');\n        this.isSaving = true;\n        this.job.skills = this.skillStr;\n        if (this.job.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobService.update(this.job));\n        }\n        else {\n            this.subscribeToSaveResponse(this.jobService.create(this.job));\n        }\n    };\n    JobUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    JobUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    JobUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    Object.defineProperty(JobUpdateComponent.prototype, \"job\", {\n        get: function () {\n            return this._job;\n        },\n        set: function (job) {\n            this._job = job;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JobUpdateComponent.prototype.addSkill = function (item) {\n        this.savedSkillsArry.push(item);\n    };\n    JobUpdateComponent.prototype.removeSkill = function (item) {\n        var index = this.savedSkillsArry.indexOf(item);\n        if (index !== -1) {\n            this.savedSkillsArry.splice(index, 1);\n        }\n    };\n    JobUpdateComponent.prototype.toggle = function (pagenum) {\n        if (pagenum === 0) {\n            this.page2 = false;\n            this.page1 = true;\n        }\n        if (pagenum === 1) {\n            this.page1 = false;\n            this.page2 = true;\n        }\n        if (pagenum === 2) {\n            this.page2 = false;\n            this.page3 = true;\n        }\n        if (pagenum === 3) {\n            this.page3 = false;\n            this.page2 = true;\n        }\n    };\n    JobUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-job-update',\n            templateUrl: './job-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof job_service_1.JobService !== \"undefined\" && job_service_1.JobService) === \"function\" && _a || Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _b || Object])\n    ], JobUpdateComponent);\n    return JobUpdateComponent;\n    var _a, _b;\n}());\nexports.JobUpdateComponent = JobUpdateComponent;\n",{"version":3,"file":"/home/mmathew/myapplication/src/main/webapp/app/entities/job/job-update.component.ts","sourceRoot":"","sources":["/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js!/home/mmathew/myapplication/node_modules/tslint-loader/index.js!/home/mmathew/myapplication/src/main/webapp/app/entities/job/job-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { IJob } from 'app/shared/model/job.model';\nimport { JobService } from './job.service';\n@Component({\n    selector: 'jhi-job-update',\n    templateUrl: './job-update.component.html'\n\n    \n})\nexport class JobUpdateComponent implements OnInit {\n\n    private _job: IJob;\n    isSaving: boolean;\n    workTypeArray: Array<string>;\n    skillsArray: Array<string>;\n    savedSkillsArry: Array<string>;\n    skillStr:string;\n    page1:boolean;\n    page2:boolean;\n    page3:boolean;\n    constructor(private jobService: JobService, private activatedRoute: ActivatedRoute) {}\n\n    ngOnInit() {\n    \t\n        this.isSaving = false;\n        this.page1=true; this.page2=false; this.page3=false;\n        this.workTypeArray=['Full Time','Part Time'];\n        this.skillsArray=['Java','Spring','Hibernate','MySql','JSP'];\n        this.savedSkillsArry=[];\n        this.skillStr='';\n        this.activatedRoute.data.subscribe(({ job }) => {\n            this.job = job;\n        });\n     \n    \t\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.skillStr = this.savedSkillsArry.join(', ');\n        this.isSaving = true;\n        this.job.skills=this.skillStr;\n        if (this.job.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobService.update(this.job));\n        } else {\n            this.subscribeToSaveResponse(this.jobService.create(this.job));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IJob>>) {\n        result.subscribe((res: HttpResponse<IJob>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n    get job() {\n        return this._job;\n    }\n\n    set job(job: IJob) {\n        this._job = job;\n    }\n    \n    addSkill(item: string){\n    \tthis.savedSkillsArry.push(item);\n    \t\n    }\n    removeSkill(item: string){\n    \tconst index: number = this.savedSkillsArry.indexOf(item);\n\t\t    if (index !== -1) {\n\t\t        this.savedSkillsArry.splice(index, 1);\n\t\t    \n\t\t    }    \n       }\n    toggle(pagenum: number){\n    \tif(pagenum===0){\n    \t\tthis.page2=false;\n    \t\tthis.page1=true;\n    \t}\n    \tif(pagenum===1){\n    \t\tthis.page1=false;\n    \t\tthis.page2=true;\n    \t}\n    \tif(pagenum===2){\n    \t\tthis.page2=false;\n    \t\tthis.page3=true;\n    \t}\n    \tif(pagenum===3){\n    \t\tthis.page3=false;\n    \t\tthis.page2=true;\n    \t}\n    }\n\n}\n"]}]}