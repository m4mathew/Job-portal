{"remainingRequest":"/home/mmathew/myapplication/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/mmathew/myapplication/node_modules/ts-loader/index.js??ref--10-3!/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js!/home/mmathew/myapplication/node_modules/tslint-loader/index.js!/home/mmathew/myapplication/src/main/webapp/app/account/register/register.component.ts","dependencies":[{"path":"/home/mmathew/myapplication/src/main/webapp/app/account/register/register.component.ts","mtime":1545148854788},{"path":"/home/mmathew/myapplication/node_modules/angular2-template-loader/index.js","mtime":1534132863114},{"path":"/home/mmathew/myapplication/node_modules/cache-loader/dist/cjs.js","mtime":1534084430679},{"path":"/home/mmathew/myapplication/node_modules/thread-loader/dist/cjs.js","mtime":1534084440479},{"path":"/home/mmathew/myapplication/node_modules/ts-loader/index.js","mtime":1534132874116},{"path":"/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js","mtime":1534132863071},{"path":"/home/mmathew/myapplication/node_modules/tslint-loader/index.js","mtime":1534084441447}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar shared_1 = require(\"app/shared\");\nvar core_2 = require(\"app/core\");\nvar register_service_1 = require(\"./register.service\");\nvar RegisterComponent = /** @class */ (function () {\n    function RegisterComponent(loginModalService, registerService, elementRef, renderer) {\n        this.loginModalService = loginModalService;\n        this.registerService = registerService;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    RegisterComponent.prototype.ngOnInit = function () {\n        this.success = false;\n        this.registerAccount = {};\n    };\n    RegisterComponent.prototype.ngAfterViewInit = function () {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n    };\n    RegisterComponent.prototype.register = function () {\n        var _this = this;\n        if (this.registerAccount.password !== this.confirmPassword) {\n            this.doNotMatch = 'ERROR';\n        }\n        else {\n            this.doNotMatch = null;\n            this.error = null;\n            this.errorUserExists = null;\n            this.errorEmailExists = null;\n            this.registerAccount.langKey = 'en';\n            this.registerService.save(this.registerAccount).subscribe(function () {\n                _this.success = true;\n            }, function (response) { return _this.processError(response); });\n        }\n    };\n    RegisterComponent.prototype.openLogin = function () {\n        this.modalRef = this.loginModalService.open();\n    };\n    RegisterComponent.prototype.processError = function (response) {\n        this.success = null;\n        if (response.status === 400 && response.error.type === shared_1.LOGIN_ALREADY_USED_TYPE) {\n            this.errorUserExists = 'ERROR';\n        }\n        else if (response.status === 400 && response.error.type === shared_1.EMAIL_ALREADY_USED_TYPE) {\n            this.errorEmailExists = 'ERROR';\n        }\n        else {\n            this.error = 'ERROR';\n        }\n    };\n    RegisterComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-register',\n            templateUrl: './register.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" && _a || Object, typeof (_b = typeof register_service_1.Register !== \"undefined\" && register_service_1.Register) === \"function\" && _b || Object, typeof (_c = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" && _c || Object, typeof (_d = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" && _d || Object])\n    ], RegisterComponent);\n    return RegisterComponent;\n    var _a, _b, _c, _d;\n}());\nexports.RegisterComponent = RegisterComponent;\n",{"version":3,"file":"/home/mmathew/myapplication/src/main/webapp/app/account/register/register.component.ts","sourceRoot":"","sources":["/home/mmathew/myapplication/node_modules/angular-router-loader/src/index.js!/home/mmathew/myapplication/node_modules/tslint-loader/index.js!/home/mmathew/myapplication/src/main/webapp/app/account/register/register.component.ts"],"names":[],"mappings":";;;AAAA,sCAAuF;AAIvF,qCAA8E;AAC9E,iCAA6C;AAC7C,uDAA8C;AAM9C;IAUI,2BACY,iBAAoC,EACpC,eAAyB,EACzB,UAAsB,EACtB,QAAkB;QAHlB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAU;QACzB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;IAC3B,CAAC;IAEJ,oCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,2CAAe,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAgBC;QAfG,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACrD;gBACI,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,CAAC,EACD,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAA3B,CAA2B,CAC1C,CAAC;QACN,CAAC;IACL,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IAEO,wCAAY,GAApB,UAAqB,QAA2B;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,gCAAuB,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACzB,CAAC;IACL,CAAC;IAzDQ,iBAAiB;QAJ7B,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SAC3C,CAAC;qEAYiC,wBAAiB,oBAAjB,wBAAiB,sDACnB,2BAAQ,oBAAR,2BAAQ,sDACb,iBAAU,oBAAV,iBAAU,sDACZ,eAAQ,oBAAR,eAAQ;OAdrB,iBAAiB,CA0D7B;IAAD,wBAAC;;CAAA,AA1DD,IA0DC;AA1DY,8CAAiB","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\nimport { LoginModalService } from 'app/core';\nimport { Register } from './register.service';\n\n@Component({\n    selector: 'jhi-register',\n    templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n    confirmPassword: string;\n    doNotMatch: string;\n    error: string;\n    errorEmailExists: string;\n    errorUserExists: string;\n    registerAccount: any;\n    success: boolean;\n    modalRef: NgbModalRef;\n\n    constructor(\n        private loginModalService: LoginModalService,\n        private registerService: Register,\n        private elementRef: ElementRef,\n        private renderer: Renderer\n    ) {}\n\n    ngOnInit() {\n        this.success = false;\n        this.registerAccount = {};\n    }\n\n    ngAfterViewInit() {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n    }\n\n    register() {\n        if (this.registerAccount.password !== this.confirmPassword) {\n            this.doNotMatch = 'ERROR';\n        } else {\n            this.doNotMatch = null;\n            this.error = null;\n            this.errorUserExists = null;\n            this.errorEmailExists = null;\n            this.registerAccount.langKey = 'en';\n            this.registerService.save(this.registerAccount).subscribe(\n                () => {\n                    this.success = true;\n                },\n                response => this.processError(response)\n            );\n        }\n    }\n\n    openLogin() {\n        this.modalRef = this.loginModalService.open();\n    }\n\n    private processError(response: HttpErrorResponse) {\n        this.success = null;\n        if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n            this.errorUserExists = 'ERROR';\n        } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n            this.errorEmailExists = 'ERROR';\n        } else {\n            this.error = 'ERROR';\n        }\n    }\n}\n"]}]}